import cv2
import numpy as np

# read image
img_bgr = cv2.imread(
    '/Users/Chevre/PycharmProjects/autonomous_rc_car/images/Original_files/opencv-template-matching-python-tutorial.jpg')
# convert graysclae to bgr
img_gray = cv2.cvtColor(img_bgr, cv2.COLOR_BGR2GRAY)

# read snippit of image
template = cv2.imread(
    '/Users/Chevre/PycharmProjects/autonomous_rc_car/images/Original_files/opencv-template-for-matching.jpg', 0)
# -1 to flip array to get right size
w, h = template.shape[::-1]

res = cv2.matchTemplate(img_gray, template, cv2.TM_CCOEFF_NORMED)
# lowering thresold will give more results but also noise
threshold = 0.9
loc = np.where(res >= threshold)

for pt in zip(*loc[::-1]):
    cv2.rectangle(img_bgr, pt, (pt[0] + w, pt[1] + h), (0, 255, 255), 2)

cv2.imshow('detected', img_bgr)

cv2.waitKey(0)
cv2.DestroyAllWindows()
